/* soapH.h
   Generated by gSOAP 2.7.17 from test.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _ns3__byte is a typedef element/attribute synonym for byte */

#ifndef SOAP_TYPE__ns3__byte
#define SOAP_TYPE__ns3__byte (64)
#endif

#define soap_default__ns3__byte(soap, a) soap_default_byte(soap, a)


#define soap_out__ns3__byte soap_out_byte


#define soap_in__ns3__byte soap_in_byte


#define soap_write__ns3__byte(soap, data) ( soap_begin_send(soap) || soap_put__ns3__byte(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__byte soap_put_byte


#define soap_read__ns3__byte(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__byte(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__byte soap_get_byte


#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (26)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

#define soap_write_xsd__byte(soap, data) ( soap_begin_send(soap) || soap_put_xsd__byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

/* _ns3__short is a typedef element/attribute synonym for short */

#ifndef SOAP_TYPE__ns3__short
#define SOAP_TYPE__ns3__short (72)
#endif

#define soap_default__ns3__short(soap, a) soap_default_short(soap, a)


#define soap_out__ns3__short soap_out_short


#define soap_in__ns3__short soap_in_short


#define soap_write__ns3__short(soap, data) ( soap_begin_send(soap) || soap_put__ns3__short(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__short soap_put_short


#define soap_read__ns3__short(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__short(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__short soap_get_short


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

#define soap_write_short(soap, data) ( soap_begin_send(soap) || soap_put_short(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

/* _ns3__char is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__ns3__char
#define SOAP_TYPE__ns3__char (78)
#endif

#define soap_default__ns3__char(soap, a) soap_default_int(soap, a)


#define soap_out__ns3__char soap_out_int


#define soap_in__ns3__char soap_in_int


#define soap_write__ns3__char(soap, data) ( soap_begin_send(soap) || soap_put__ns3__char(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__char soap_put_int


#define soap_read__ns3__char(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__char(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__char soap_get_int


/* _ns3__int is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__ns3__int
#define SOAP_TYPE__ns3__int (69)
#endif

#define soap_default__ns3__int(soap, a) soap_default_int(soap, a)


#define soap_out__ns3__int soap_out_int


#define soap_in__ns3__int soap_in_int


#define soap_write__ns3__int(soap, data) ( soap_begin_send(soap) || soap_put__ns3__int(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__int soap_put_int


#define soap_read__ns3__int(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__int(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__int soap_get_int


#ifndef SOAP_TYPE_ns3__char
#define SOAP_TYPE_ns3__char (53)
#endif

#define soap_default_ns3__char(soap, a) soap_default_int(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__char(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_ns3__char(struct soap*, const char*, int *, const char*);

#define soap_write_ns3__char(soap, data) ( soap_begin_send(soap) || soap_put_ns3__char(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__char(struct soap*, const int *, const char*, const char*);

#define soap_read_ns3__char(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__char(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_ns3__char(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

/* _ns3__long is a typedef element/attribute synonym for LONG64 */

#ifndef SOAP_TYPE__ns3__long
#define SOAP_TYPE__ns3__long (70)
#endif

#define soap_default__ns3__long(soap, a) soap_default_LONG64(soap, a)


#define soap_out__ns3__long soap_out_LONG64


#define soap_in__ns3__long soap_in_LONG64


#define soap_write__ns3__long(soap, data) ( soap_begin_send(soap) || soap_put__ns3__long(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__long soap_put_LONG64


#define soap_read__ns3__long(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__long(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__long soap_get_LONG64


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

#define soap_write_LONG64(soap, data) ( soap_begin_send(soap) || soap_put_LONG64(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

/* _ns3__float is a typedef element/attribute synonym for float */

#ifndef SOAP_TYPE__ns3__float
#define SOAP_TYPE__ns3__float (68)
#endif

#define soap_default__ns3__float(soap, a) soap_default_float(soap, a)


#define soap_out__ns3__float soap_out_float


#define soap_in__ns3__float soap_in_float


#define soap_write__ns3__float(soap, data) ( soap_begin_send(soap) || soap_put__ns3__float(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__float soap_put_float


#define soap_read__ns3__float(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__float(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__float soap_get_float


#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

#define soap_write_float(soap, data) ( soap_begin_send(soap) || soap_put_float(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

/* _ns3__double is a typedef element/attribute synonym for double */

#ifndef SOAP_TYPE__ns3__double
#define SOAP_TYPE__ns3__double (67)
#endif

#define soap_default__ns3__double(soap, a) soap_default_double(soap, a)


#define soap_out__ns3__double soap_out_double


#define soap_in__ns3__double soap_in_double


#define soap_write__ns3__double(soap, data) ( soap_begin_send(soap) || soap_put__ns3__double(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__double soap_put_double


#define soap_read__ns3__double(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__double(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__double soap_get_double


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

/* _ns3__unsignedByte is a typedef element/attribute synonym for unsignedByte */

#ifndef SOAP_TYPE__ns3__unsignedByte
#define SOAP_TYPE__ns3__unsignedByte (74)
#endif

#define soap_default__ns3__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)


#define soap_out__ns3__unsignedByte soap_out_unsignedByte


#define soap_in__ns3__unsignedByte soap_in_unsignedByte


#define soap_write__ns3__unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put__ns3__unsignedByte(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__unsignedByte soap_put_unsignedByte


#define soap_read__ns3__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__unsignedByte soap_get_unsignedByte


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (44)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#define soap_write_xsd__unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#define soap_write_unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put_unsignedByte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

/* _ns3__unsignedShort is a typedef element/attribute synonym for unsignedShort */

#ifndef SOAP_TYPE__ns3__unsignedShort
#define SOAP_TYPE__ns3__unsignedShort (77)
#endif

#define soap_default__ns3__unsignedShort(soap, a) soap_default_unsignedShort(soap, a)


#define soap_out__ns3__unsignedShort soap_out_unsignedShort


#define soap_in__ns3__unsignedShort soap_in_unsignedShort


#define soap_write__ns3__unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put__ns3__unsignedShort(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__unsignedShort soap_put_unsignedShort


#define soap_read__ns3__unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__unsignedShort soap_get_unsignedShort


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

#define soap_write_unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put_unsignedShort(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

/* _ns3__unsignedInt is a typedef element/attribute synonym for unsignedInt */

#ifndef SOAP_TYPE__ns3__unsignedInt
#define SOAP_TYPE__ns3__unsignedInt (75)
#endif

#define soap_default__ns3__unsignedInt(soap, a) soap_default_unsignedInt(soap, a)


#define soap_out__ns3__unsignedInt soap_out_unsignedInt


#define soap_in__ns3__unsignedInt soap_in_unsignedInt


#define soap_write__ns3__unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put__ns3__unsignedInt(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__unsignedInt soap_put_unsignedInt


#define soap_read__ns3__unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__unsignedInt soap_get_unsignedInt


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#define soap_write_unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_unsignedInt(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

/* _ns3__unsignedLong is a typedef element/attribute synonym for unsignedLONG64 */

#ifndef SOAP_TYPE__ns3__unsignedLong
#define SOAP_TYPE__ns3__unsignedLong (76)
#endif

#define soap_default__ns3__unsignedLong(soap, a) soap_default_unsignedLONG64(soap, a)


#define soap_out__ns3__unsignedLong soap_out_unsignedLONG64


#define soap_in__ns3__unsignedLong soap_in_unsignedLONG64


#define soap_write__ns3__unsignedLong(soap, data) ( soap_begin_send(soap) || soap_put__ns3__unsignedLong(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__unsignedLong soap_put_unsignedLONG64


#define soap_read__ns3__unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__unsignedLong soap_get_unsignedLONG64


#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

#define soap_write_unsignedLONG64(soap, data) ( soap_begin_send(soap) || soap_put_unsignedLONG64(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

/* _ns3__dateTime is a typedef element/attribute synonym for time */

#ifndef SOAP_TYPE__ns3__dateTime
#define SOAP_TYPE__ns3__dateTime (65)
#endif

#define soap_default__ns3__dateTime(soap, a) soap_default_time(soap, a)


#define soap_out__ns3__dateTime soap_out_time


#define soap_in__ns3__dateTime soap_in_time


#define soap_write__ns3__dateTime(soap, data) ( soap_begin_send(soap) || soap_put__ns3__dateTime(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__dateTime soap_put_time


#define soap_read__ns3__dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__dateTime(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__dateTime soap_get_time


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

#define soap_write_time(soap, data) ( soap_begin_send(soap) || soap_put_time(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

/* _ns3__boolean is a typedef element/attribute synonym for bool */

#ifndef SOAP_TYPE__ns3__boolean
#define SOAP_TYPE__ns3__boolean (63)
#endif

#define soap_default__ns3__boolean(soap, a) soap_default_bool(soap, a)


#define soap_out__ns3__boolean soap_out_bool


#define soap_in__ns3__boolean soap_in_bool


#define soap_write__ns3__boolean(soap, data) ( soap_begin_send(soap) || soap_put__ns3__boolean(soap, data, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__boolean soap_put_bool


#define soap_read__ns3__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__boolean(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__boolean soap_get_bool


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

/* _ns3__Ref is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__Ref
#define SOAP_TYPE__ns3__Ref (83)
#endif

#define soap_default__ns3__Ref(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__Ref(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__Ref soap_out_std__string


#define soap_in__ns3__Ref soap_in_std__string


#define soap_write__ns3__Ref(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__Ref soap_put_std__string


#define soap_read__ns3__Ref(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__Ref(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__Ref soap_get_std__string


#define soap_new__ns3__Ref(soap, n) soap_instantiate__ns3__Ref(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__Ref(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__Ref soap_instantiate_std__string


#define soap_copy__ns3__Ref soap_copy_std__string

/* _ns3__Id is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__Id
#define SOAP_TYPE__ns3__Id (82)
#endif

#define soap_default__ns3__Id(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__Id(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__Id soap_out_std__string


#define soap_in__ns3__Id soap_in_std__string


#define soap_write__ns3__Id(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__Id soap_put_std__string


#define soap_read__ns3__Id(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__Id(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__Id soap_get_std__string


#define soap_new__ns3__Id(soap, n) soap_instantiate__ns3__Id(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__Id(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__Id soap_instantiate_std__string


#define soap_copy__ns3__Id soap_copy_std__string

#ifndef SOAP_TYPE__ns3__FactoryType
#define SOAP_TYPE__ns3__FactoryType (81)
#endif

#define soap_default__ns3__FactoryType(soap, a) soap_default_xsd__QName(soap, a)


#define soap_serialize__ns3__FactoryType(soap, a) soap_serialize_xsd__QName(soap, a)


SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__FactoryType(struct soap*, const char*, int, const xsd__QName *, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in__ns3__FactoryType(struct soap*, const char*, std::string*, const char*);

#define soap_write__ns3__FactoryType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__FactoryType(struct soap*, const xsd__QName *, const char*, const char*);

#define soap_read__ns3__FactoryType(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__FactoryType(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__QName * SOAP_FMAC4 soap_get__ns3__FactoryType(struct soap*, xsd__QName *, const char*, const char*);

#define soap_new__ns3__FactoryType(soap, n) soap_instantiate__ns3__FactoryType(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__FactoryType(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__FactoryType soap_instantiate_xsd__QName


#define soap_copy__ns3__FactoryType soap_copy_xsd__QName

/* _ns3__guid is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__guid
#define SOAP_TYPE__ns3__guid (80)
#endif

#define soap_default__ns3__guid(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__guid(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__guid soap_out_std__string


#define soap_in__ns3__guid soap_in_std__string


#define soap_write__ns3__guid(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__guid soap_put_std__string


#define soap_read__ns3__guid(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__guid(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__guid soap_get_std__string


#define soap_new__ns3__guid(soap, n) soap_instantiate__ns3__guid(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__guid(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__guid soap_instantiate_std__string


#define soap_copy__ns3__guid soap_copy_std__string

/* _ns3__duration is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__duration
#define SOAP_TYPE__ns3__duration (79)
#endif

#define soap_default__ns3__duration(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__duration(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__duration soap_out_std__string


#define soap_in__ns3__duration soap_in_std__string


#define soap_write__ns3__duration(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__duration soap_put_std__string


#define soap_read__ns3__duration(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__duration(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__duration soap_get_std__string


#define soap_new__ns3__duration(soap, n) soap_instantiate__ns3__duration(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__duration(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__duration soap_instantiate_std__string


#define soap_copy__ns3__duration soap_copy_std__string

/* _ns3__string is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__string
#define SOAP_TYPE__ns3__string (73)
#endif

#define soap_default__ns3__string(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__string(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__string soap_out_std__string


#define soap_in__ns3__string soap_in_std__string


#define soap_write__ns3__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__string soap_put_std__string


#define soap_read__ns3__string(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__string(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__string soap_get_std__string


#define soap_new__ns3__string(soap, n) soap_instantiate__ns3__string(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__string(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__string soap_instantiate_std__string


#define soap_copy__ns3__string soap_copy_std__string

#ifndef SOAP_TYPE__ns3__QName
#define SOAP_TYPE__ns3__QName (71)
#endif

#define soap_default__ns3__QName(soap, a) soap_default_xsd__QName(soap, a)


#define soap_serialize__ns3__QName(soap, a) soap_serialize_xsd__QName(soap, a)


SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__QName(struct soap*, const char*, int, const xsd__QName *, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in__ns3__QName(struct soap*, const char*, std::string*, const char*);

#define soap_write__ns3__QName(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__QName(struct soap*, const xsd__QName *, const char*, const char*);

#define soap_read__ns3__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__QName * SOAP_FMAC4 soap_get__ns3__QName(struct soap*, xsd__QName *, const char*, const char*);

#define soap_new__ns3__QName(soap, n) soap_instantiate__ns3__QName(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__QName(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__QName soap_instantiate_xsd__QName


#define soap_copy__ns3__QName soap_copy_xsd__QName

/* _ns3__decimal is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__decimal
#define SOAP_TYPE__ns3__decimal (66)
#endif

#define soap_default__ns3__decimal(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__decimal(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__decimal soap_out_std__string


#define soap_in__ns3__decimal soap_in_std__string


#define soap_write__ns3__decimal(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__decimal soap_put_std__string


#define soap_read__ns3__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__decimal(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__decimal soap_get_std__string


#define soap_new__ns3__decimal(soap, n) soap_instantiate__ns3__decimal(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__decimal(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__decimal soap_instantiate_std__string


#define soap_copy__ns3__decimal soap_copy_std__string

/* _ns3__base64Binary is a typedef element/attribute synonym for xsd__base64Binary */

#ifndef SOAP_TYPE__ns3__base64Binary
#define SOAP_TYPE__ns3__base64Binary (62)
#endif

#define soap_default__ns3__base64Binary(soap, a) (a)->xsd__base64Binary::soap_default(soap)


#define soap_serialize__ns3__base64Binary(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in__ns3__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_write__ns3__base64Binary(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__base64Binary soap_put_xsd__base64Binary


#define soap_read__ns3__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__base64Binary soap_get_xsd__base64Binary


#define soap_new__ns3__base64Binary(soap, n) soap_instantiate__ns3__base64Binary(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__base64Binary(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__base64Binary soap_instantiate_xsd__base64Binary


#define soap_copy__ns3__base64Binary soap_copy_xsd__base64Binary

/* _ns3__anyURI is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__anyURI
#define SOAP_TYPE__ns3__anyURI (61)
#endif

#define soap_default__ns3__anyURI(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__anyURI(soap, a) soap_serialize_std__string(soap, a)


#define soap_out__ns3__anyURI soap_out_std__string


#define soap_in__ns3__anyURI soap_in_std__string


#define soap_write__ns3__anyURI(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__anyURI soap_put_std__string


#define soap_read__ns3__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__anyURI soap_get_std__string


#define soap_new__ns3__anyURI(soap, n) soap_instantiate__ns3__anyURI(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__anyURI(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__anyURI soap_instantiate_std__string


#define soap_copy__ns3__anyURI soap_copy_std__string

/* _ns3__anyType is a typedef element/attribute synonym for xsd__anyType */

#ifndef SOAP_TYPE__ns3__anyType
#define SOAP_TYPE__ns3__anyType (60)
#endif

#define soap_default__ns3__anyType(soap, a) (a)->xsd__anyType::soap_default(soap)


#define soap_serialize__ns3__anyType(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns3__anyType soap_out_xsd__anyType


#define soap_in__ns3__anyType soap_in_xsd__anyType


#define soap_write__ns3__anyType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_put__ns3__anyType soap_put_xsd__anyType


#define soap_read__ns3__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get__ns3__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )


#define soap_get__ns3__anyType soap_get_xsd__anyType


#define soap_new__ns3__anyType(soap, n) soap_instantiate__ns3__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete__ns3__anyType(soap, p) soap_delete(soap, p)


#define soap_instantiate__ns3__anyType soap_instantiate_xsd__anyType


#define soap_copy__ns3__anyType soap_copy_xsd__anyType

#ifndef SOAP_TYPE_ns3__guid__
#define SOAP_TYPE_ns3__guid__ (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__guid__(struct soap*, const char*, int, const ns3__guid__ *, const char*);
SOAP_FMAC3 ns3__guid__ * SOAP_FMAC4 soap_in_ns3__guid__(struct soap*, const char*, ns3__guid__ *, const char*);

#define soap_write_ns3__guid__(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns3__guid__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__guid__(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns3__guid__ * SOAP_FMAC4 soap_get_ns3__guid__(struct soap*, ns3__guid__ *, const char*, const char*);

#define soap_new_ns3__guid__(soap, n) soap_instantiate_ns3__guid__(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__guid__(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns3__guid__ * SOAP_FMAC2 soap_instantiate_ns3__guid__(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__guid__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__guid
#define SOAP_TYPE_ns3__guid (57)
#endif

#define soap_default_ns3__guid(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_ns3__guid(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__guid(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns3__guid(struct soap*, const char*, std::string*, const char*);

#define soap_write_ns3__guid(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__guid(struct soap*, const std::string *, const char*, const char*);

#define soap_read_ns3__guid(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__guid(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns3__guid(struct soap*, std::string *, const char*, const char*);

#define soap_new_ns3__guid(soap, n) soap_instantiate_ns3__guid(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__guid(soap, p) soap_delete(soap, p)


#define soap_instantiate_ns3__guid soap_instantiate_std__string


#define soap_copy_ns3__guid soap_copy_std__string

#ifndef SOAP_TYPE_ns3__duration__
#define SOAP_TYPE_ns3__duration__ (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__duration__(struct soap*, const char*, int, const ns3__duration__ *, const char*);
SOAP_FMAC3 ns3__duration__ * SOAP_FMAC4 soap_in_ns3__duration__(struct soap*, const char*, ns3__duration__ *, const char*);

#define soap_write_ns3__duration__(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns3__duration__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__duration__(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns3__duration__ * SOAP_FMAC4 soap_get_ns3__duration__(struct soap*, ns3__duration__ *, const char*, const char*);

#define soap_new_ns3__duration__(soap, n) soap_instantiate_ns3__duration__(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__duration__(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns3__duration__ * SOAP_FMAC2 soap_instantiate_ns3__duration__(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__duration__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__duration
#define SOAP_TYPE_ns3__duration (55)
#endif

#define soap_default_ns3__duration(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_ns3__duration(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__duration(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns3__duration(struct soap*, const char*, std::string*, const char*);

#define soap_write_ns3__duration(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__duration(struct soap*, const std::string *, const char*, const char*);

#define soap_read_ns3__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__duration(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns3__duration(struct soap*, std::string *, const char*, const char*);

#define soap_new_ns3__duration(soap, n) soap_instantiate_ns3__duration(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__duration(soap, p) soap_delete(soap, p)


#define soap_instantiate_ns3__duration soap_instantiate_std__string


#define soap_copy_ns3__duration soap_copy_std__string

#ifndef SOAP_TYPE_ns3__char__
#define SOAP_TYPE_ns3__char__ (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__char__(struct soap*, const char*, int, const ns3__char__ *, const char*);
SOAP_FMAC3 ns3__char__ * SOAP_FMAC4 soap_in_ns3__char__(struct soap*, const char*, ns3__char__ *, const char*);

#define soap_write_ns3__char__(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns3__char__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__char__(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns3__char__ * SOAP_FMAC4 soap_get_ns3__char__(struct soap*, ns3__char__ *, const char*, const char*);

#define soap_new_ns3__char__(soap, n) soap_instantiate_ns3__char__(soap, n, NULL, NULL, NULL)


#define soap_delete_ns3__char__(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns3__char__ * SOAP_FMAC2 soap_instantiate_ns3__char__(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__char__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckLoginResponse
#define SOAP_TYPE__ns1__CheckLoginResponse (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckLoginResponse(struct soap*, const char*, int, const _ns1__CheckLoginResponse *, const char*);
SOAP_FMAC3 _ns1__CheckLoginResponse * SOAP_FMAC4 soap_in__ns1__CheckLoginResponse(struct soap*, const char*, _ns1__CheckLoginResponse *, const char*);

#define soap_write__ns1__CheckLoginResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__ns1__CheckLoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckLoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _ns1__CheckLoginResponse * SOAP_FMAC4 soap_get__ns1__CheckLoginResponse(struct soap*, _ns1__CheckLoginResponse *, const char*, const char*);

#define soap_new__ns1__CheckLoginResponse(soap, n) soap_instantiate__ns1__CheckLoginResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckLoginResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckLoginResponse * SOAP_FMAC2 soap_instantiate__ns1__CheckLoginResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckLoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CheckLogin
#define SOAP_TYPE__ns1__CheckLogin (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CheckLogin(struct soap*, const char*, int, const _ns1__CheckLogin *, const char*);
SOAP_FMAC3 _ns1__CheckLogin * SOAP_FMAC4 soap_in__ns1__CheckLogin(struct soap*, const char*, _ns1__CheckLogin *, const char*);

#define soap_write__ns1__CheckLogin(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__ns1__CheckLogin(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CheckLogin(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _ns1__CheckLogin * SOAP_FMAC4 soap_get__ns1__CheckLogin(struct soap*, _ns1__CheckLogin *, const char*, const char*);

#define soap_new__ns1__CheckLogin(soap, n) soap_instantiate__ns1__CheckLogin(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__CheckLogin(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__CheckLogin * SOAP_FMAC2 soap_instantiate__ns1__CheckLogin(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CheckLogin(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedShort(struct soap*, const char*, int, const xsd__unsignedShort *, const char*);
SOAP_FMAC3 xsd__unsignedShort * SOAP_FMAC4 soap_in_xsd__unsignedShort(struct soap*, const char*, xsd__unsignedShort *, const char*);

#define soap_write_xsd__unsignedShort(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__unsignedShort * SOAP_FMAC4 soap_get_xsd__unsignedShort(struct soap*, xsd__unsignedShort *, const char*, const char*);

#define soap_new_xsd__unsignedShort(soap, n) soap_instantiate_xsd__unsignedShort(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__unsignedShort(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__unsignedShort * SOAP_FMAC2 soap_instantiate_xsd__unsignedShort(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedShort(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedLong(struct soap*, const char*, int, const xsd__unsignedLong *, const char*);
SOAP_FMAC3 xsd__unsignedLong * SOAP_FMAC4 soap_in_xsd__unsignedLong(struct soap*, const char*, xsd__unsignedLong *, const char*);

#define soap_write_xsd__unsignedLong(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__unsignedLong * SOAP_FMAC4 soap_get_xsd__unsignedLong(struct soap*, xsd__unsignedLong *, const char*, const char*);

#define soap_new_xsd__unsignedLong(soap, n) soap_instantiate_xsd__unsignedLong(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__unsignedLong(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__unsignedLong * SOAP_FMAC2 soap_instantiate_xsd__unsignedLong(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedLong(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedInt(struct soap*, const char*, int, const xsd__unsignedInt *, const char*);
SOAP_FMAC3 xsd__unsignedInt * SOAP_FMAC4 soap_in_xsd__unsignedInt(struct soap*, const char*, xsd__unsignedInt *, const char*);

#define soap_write_xsd__unsignedInt(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__unsignedInt * SOAP_FMAC4 soap_get_xsd__unsignedInt(struct soap*, xsd__unsignedInt *, const char*, const char*);

#define soap_new_xsd__unsignedInt(soap, n) soap_instantiate_xsd__unsignedInt(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__unsignedInt(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__unsignedInt * SOAP_FMAC2 soap_instantiate_xsd__unsignedInt(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedByte_
#define SOAP_TYPE_xsd__unsignedByte_ (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte_(struct soap*, const char*, int, const xsd__unsignedByte_ *, const char*);
SOAP_FMAC3 xsd__unsignedByte_ * SOAP_FMAC4 soap_in_xsd__unsignedByte_(struct soap*, const char*, xsd__unsignedByte_ *, const char*);

#define soap_write_xsd__unsignedByte_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__unsignedByte_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__unsignedByte_ * SOAP_FMAC4 soap_get_xsd__unsignedByte_(struct soap*, xsd__unsignedByte_ *, const char*, const char*);

#define soap_new_xsd__unsignedByte_(soap, n) soap_instantiate_xsd__unsignedByte_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__unsignedByte_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__unsignedByte_ * SOAP_FMAC2 soap_instantiate_xsd__unsignedByte_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedByte_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const xsd__string *, const char*);
SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, xsd__string *, const char*);

#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, xsd__string *, const char*, const char*);

#define soap_new_xsd__string(soap, n) soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__string * SOAP_FMAC2 soap_instantiate_xsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__short(struct soap*, const char*, int, const xsd__short *, const char*);
SOAP_FMAC3 xsd__short * SOAP_FMAC4 soap_in_xsd__short(struct soap*, const char*, xsd__short *, const char*);

#define soap_write_xsd__short(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__short(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__short(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__short * SOAP_FMAC4 soap_get_xsd__short(struct soap*, xsd__short *, const char*, const char*);

#define soap_new_xsd__short(soap, n) soap_instantiate_xsd__short(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__short(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__short * SOAP_FMAC2 soap_instantiate_xsd__short(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__short(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const xsd__long *, const char*);
SOAP_FMAC3 xsd__long * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, xsd__long *, const char*);

#define soap_write_xsd__long(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__long(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__long(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__long * SOAP_FMAC4 soap_get_xsd__long(struct soap*, xsd__long *, const char*, const char*);

#define soap_new_xsd__long(soap, n) soap_instantiate_xsd__long(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__long(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__long * SOAP_FMAC2 soap_instantiate_xsd__long(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__long(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const xsd__int *, const char*);
SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, xsd__int *, const char*);

#define soap_write_xsd__int(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__int(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_get_xsd__int(struct soap*, xsd__int *, const char*, const char*);

#define soap_new_xsd__int(soap, n) soap_instantiate_xsd__int(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__int(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__int * SOAP_FMAC2 soap_instantiate_xsd__int(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__int(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap*, const char*, int, const xsd__float *, const char*);
SOAP_FMAC3 xsd__float * SOAP_FMAC4 soap_in_xsd__float(struct soap*, const char*, xsd__float *, const char*);

#define soap_write_xsd__float(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__float(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__float(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__float * SOAP_FMAC4 soap_get_xsd__float(struct soap*, xsd__float *, const char*, const char*);

#define soap_new_xsd__float(soap, n) soap_instantiate_xsd__float(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__float(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__float * SOAP_FMAC2 soap_instantiate_xsd__float(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__float(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__duration_
#define SOAP_TYPE_xsd__duration_ (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration_(struct soap*, const char*, int, const xsd__duration_ *, const char*);
SOAP_FMAC3 xsd__duration_ * SOAP_FMAC4 soap_in_xsd__duration_(struct soap*, const char*, xsd__duration_ *, const char*);

#define soap_write_xsd__duration_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__duration_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__duration_ * SOAP_FMAC4 soap_get_xsd__duration_(struct soap*, xsd__duration_ *, const char*, const char*);

#define soap_new_xsd__duration_(soap, n) soap_instantiate_xsd__duration_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__duration_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__duration_ * SOAP_FMAC2 soap_instantiate_xsd__duration_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__duration_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (34)
#endif

#define soap_default_xsd__duration(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__duration(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__duration(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__duration(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__duration(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__duration(soap, n) soap_instantiate_xsd__duration(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__duration(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__duration soap_instantiate_std__string


#define soap_copy_xsd__duration soap_copy_std__string

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const xsd__double *, const char*);
SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, xsd__double *, const char*);

#define soap_write_xsd__double(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, xsd__double *, const char*, const char*);

#define soap_new_xsd__double(soap, n) soap_instantiate_xsd__double(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__double(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__double * SOAP_FMAC2 soap_instantiate_xsd__double(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__double(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__decimal_
#define SOAP_TYPE_xsd__decimal_ (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal_(struct soap*, const char*, int, const xsd__decimal_ *, const char*);
SOAP_FMAC3 xsd__decimal_ * SOAP_FMAC4 soap_in_xsd__decimal_(struct soap*, const char*, xsd__decimal_ *, const char*);

#define soap_write_xsd__decimal_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__decimal_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__decimal_ * SOAP_FMAC4 soap_get_xsd__decimal_(struct soap*, xsd__decimal_ *, const char*, const char*);

#define soap_new_xsd__decimal_(soap, n) soap_instantiate_xsd__decimal_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__decimal_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__decimal_ * SOAP_FMAC2 soap_instantiate_xsd__decimal_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__decimal_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (30)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__decimal(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__decimal(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__decimal(soap, n) soap_instantiate_xsd__decimal(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__decimal(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__decimal soap_instantiate_std__string


#define soap_copy_xsd__decimal soap_copy_std__string

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap*, const char*, int, const xsd__dateTime *, const char*);
SOAP_FMAC3 xsd__dateTime * SOAP_FMAC4 soap_in_xsd__dateTime(struct soap*, const char*, xsd__dateTime *, const char*);

#define soap_write_xsd__dateTime(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__dateTime(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__dateTime * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, xsd__dateTime *, const char*, const char*);

#define soap_new_xsd__dateTime(soap, n) soap_instantiate_xsd__dateTime(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__dateTime(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__dateTime * SOAP_FMAC2 soap_instantiate_xsd__dateTime(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__dateTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte_(struct soap*, const char*, int, const xsd__byte_ *, const char*);
SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_in_xsd__byte_(struct soap*, const char*, xsd__byte_ *, const char*);

#define soap_write_xsd__byte_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__byte_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_get_xsd__byte_(struct soap*, xsd__byte_ *, const char*, const char*);

#define soap_new_xsd__byte_(soap, n) soap_instantiate_xsd__byte_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__byte_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__byte_ * SOAP_FMAC2 soap_instantiate_xsd__byte_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__byte_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const xsd__boolean *, const char*);
SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, xsd__boolean *, const char*);

#define soap_write_xsd__boolean(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, xsd__boolean *, const char*, const char*);

#define soap_new_xsd__boolean(soap, n) soap_instantiate_xsd__boolean(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__boolean(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__boolean * SOAP_FMAC2 soap_instantiate_xsd__boolean(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__boolean(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary_
#define SOAP_TYPE_xsd__base64Binary_ (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary_(struct soap*, const char*, int, const xsd__base64Binary_ *, const char*);
SOAP_FMAC3 xsd__base64Binary_ * SOAP_FMAC4 soap_in_xsd__base64Binary_(struct soap*, const char*, xsd__base64Binary_ *, const char*);

#define soap_write_xsd__base64Binary_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__base64Binary_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__base64Binary_ * SOAP_FMAC4 soap_get_xsd__base64Binary_(struct soap*, xsd__base64Binary_ *, const char*, const char*);

#define soap_new_xsd__base64Binary_(soap, n) soap_instantiate_xsd__base64Binary_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__base64Binary_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__base64Binary_ * SOAP_FMAC2 soap_instantiate_xsd__base64Binary_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (19)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_write_xsd__base64Binary(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#define soap_new_xsd__base64Binary(soap, n) soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__base64Binary(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI_(struct soap*, const char*, int, const xsd__anyURI_ *, const char*);
SOAP_FMAC3 xsd__anyURI_ * SOAP_FMAC4 soap_in_xsd__anyURI_(struct soap*, const char*, xsd__anyURI_ *, const char*);

#define soap_write_xsd__anyURI_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__anyURI_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__anyURI_ * SOAP_FMAC4 soap_get_xsd__anyURI_(struct soap*, xsd__anyURI_ *, const char*, const char*);

#define soap_new_xsd__anyURI_(soap, n) soap_instantiate_xsd__anyURI_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyURI_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__anyURI_ * SOAP_FMAC2 soap_instantiate_xsd__anyURI_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyURI_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (17)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__anyURI(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__anyURI(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__anyURI(soap, n) soap_instantiate_xsd__anyURI(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyURI(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_copy_xsd__anyURI soap_copy_std__string

#ifndef SOAP_TYPE_xsd__QName_
#define SOAP_TYPE_xsd__QName_ (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName_(struct soap*, const char*, int, const xsd__QName_ *, const char*);
SOAP_FMAC3 xsd__QName_ * SOAP_FMAC4 soap_in_xsd__QName_(struct soap*, const char*, xsd__QName_ *, const char*);

#define soap_write_xsd__QName_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__QName_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__QName_ * SOAP_FMAC4 soap_get_xsd__QName_(struct soap*, xsd__QName_ *, const char*, const char*);

#define soap_new_xsd__QName_(soap, n) soap_instantiate_xsd__QName_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__QName_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__QName_ * SOAP_FMAC2 soap_instantiate_xsd__QName_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (15)
#endif

#define soap_default_xsd__QName(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__QName(soap, a) soap_serialize_std__string(soap, a)


SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, const xsd__QName *, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__QName(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, const xsd__QName *, const char*, const char*);

#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__QName * SOAP_FMAC4 soap_get_xsd__QName(struct soap*, xsd__QName *, const char*, const char*);

#define soap_new_xsd__QName(soap, n) soap_instantiate_xsd__QName(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__QName(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__QName * SOAP_FMAC2 soap_instantiate_xsd__QName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__IDREF_
#define SOAP_TYPE_xsd__IDREF_ (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__IDREF_(struct soap*, const char*, int, const xsd__IDREF_ *, const char*);
SOAP_FMAC3 xsd__IDREF_ * SOAP_FMAC4 soap_in_xsd__IDREF_(struct soap*, const char*, xsd__IDREF_ *, const char*);

#define soap_write_xsd__IDREF_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__IDREF_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__IDREF_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__IDREF_ * SOAP_FMAC4 soap_get_xsd__IDREF_(struct soap*, xsd__IDREF_ *, const char*, const char*);

#define soap_new_xsd__IDREF_(soap, n) soap_instantiate_xsd__IDREF_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__IDREF_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__IDREF_ * SOAP_FMAC2 soap_instantiate_xsd__IDREF_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__IDREF_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (13)
#endif

#define soap_default_xsd__IDREF(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__IDREF(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__IDREF(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__IDREF(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__IDREF(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__IDREF(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__IDREF(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__IDREF(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__IDREF(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__IDREF(soap, n) soap_instantiate_xsd__IDREF(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__IDREF(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__IDREF soap_instantiate_std__string


#define soap_copy_xsd__IDREF soap_copy_std__string

#ifndef SOAP_TYPE_xsd__ID_
#define SOAP_TYPE_xsd__ID_ (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID_(struct soap*, const char*, int, const xsd__ID_ *, const char*);
SOAP_FMAC3 xsd__ID_ * SOAP_FMAC4 soap_in_xsd__ID_(struct soap*, const char*, xsd__ID_ *, const char*);

#define soap_write_xsd__ID_(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__ID_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID_(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__ID_ * SOAP_FMAC4 soap_get_xsd__ID_(struct soap*, xsd__ID_ *, const char*, const char*);

#define soap_new_xsd__ID_(soap, n) soap_instantiate_xsd__ID_(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__ID_(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__ID_ * SOAP_FMAC2 soap_instantiate_xsd__ID_(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__ID_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (11)
#endif

#define soap_default_xsd__ID(soap, a) soap_default_std__string(soap, a)


#define soap_serialize_xsd__ID(soap, a) soap_serialize_std__string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, std::string*, const char*);

#define soap_write_xsd__ID(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, const std::string *, const char*, const char*);

#define soap_read_xsd__ID(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__ID(struct soap*, std::string *, const char*, const char*);

#define soap_new_xsd__ID(soap, n) soap_instantiate_xsd__ID(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__ID(soap, p) soap_delete(soap, p)


#define soap_instantiate_xsd__ID soap_instantiate_std__string


#define soap_copy_xsd__ID soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#define soap_write_xsd__anyType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#define soap_new_xsd__anyType(soap, n) soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL)


#define soap_delete_xsd__anyType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__CheckLogin
#define SOAP_TYPE___ns1__CheckLogin (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__CheckLogin(struct soap*, struct __ns1__CheckLogin *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__CheckLogin(struct soap*, const struct __ns1__CheckLogin *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__CheckLogin(struct soap*, const char*, int, const struct __ns1__CheckLogin *, const char*);
SOAP_FMAC3 struct __ns1__CheckLogin * SOAP_FMAC4 soap_in___ns1__CheckLogin(struct soap*, const char*, struct __ns1__CheckLogin *, const char*);

#define soap_write___ns1__CheckLogin(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__CheckLogin(soap, data), 0) || soap_put___ns1__CheckLogin(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__CheckLogin(struct soap*, const struct __ns1__CheckLogin *, const char*, const char*);

#define soap_read___ns1__CheckLogin(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__CheckLogin(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __ns1__CheckLogin * SOAP_FMAC4 soap_get___ns1__CheckLogin(struct soap*, struct __ns1__CheckLogin *, const char*, const char*);

#define soap_new___ns1__CheckLogin(soap, n) soap_instantiate___ns1__CheckLogin(soap, n, NULL, NULL, NULL)


#define soap_delete___ns1__CheckLogin(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns1__CheckLogin * SOAP_FMAC2 soap_instantiate___ns1__CheckLogin(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__CheckLogin(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__CheckLoginResponse
#define SOAP_TYPE_PointerTo_ns1__CheckLoginResponse (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckLoginResponse(struct soap*, _ns1__CheckLoginResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckLoginResponse(struct soap*, const char *, int, _ns1__CheckLoginResponse *const*, const char *);
SOAP_FMAC3 _ns1__CheckLoginResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckLoginResponse(struct soap*, const char*, _ns1__CheckLoginResponse **, const char*);

#define soap_write_PointerTo_ns1__CheckLoginResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckLoginResponse(soap, data), 0) || soap_put_PointerTo_ns1__CheckLoginResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckLoginResponse(struct soap*, _ns1__CheckLoginResponse *const*, const char*, const char*);

#define soap_read_PointerTo_ns1__CheckLoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckLoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _ns1__CheckLoginResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckLoginResponse(struct soap*, _ns1__CheckLoginResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__CheckLogin
#define SOAP_TYPE_PointerTo_ns1__CheckLogin (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CheckLogin(struct soap*, _ns1__CheckLogin *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CheckLogin(struct soap*, const char *, int, _ns1__CheckLogin *const*, const char *);
SOAP_FMAC3 _ns1__CheckLogin ** SOAP_FMAC4 soap_in_PointerTo_ns1__CheckLogin(struct soap*, const char*, _ns1__CheckLogin **, const char*);

#define soap_write_PointerTo_ns1__CheckLogin(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__CheckLogin(soap, data), 0) || soap_put_PointerTo_ns1__CheckLogin(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CheckLogin(struct soap*, _ns1__CheckLogin *const*, const char*, const char*);

#define soap_read_PointerTo_ns1__CheckLogin(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CheckLogin(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _ns1__CheckLogin ** SOAP_FMAC4 soap_get_PointerTo_ns1__CheckLogin(struct soap*, _ns1__CheckLogin **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);

#define soap_write_PointerTounsignedByte(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data), 0) || soap_put_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
